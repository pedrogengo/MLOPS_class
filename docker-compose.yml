version: "3.9"
services:

  db:
    container_name: db
    image: mysql/mysql-server:5.7.28
    restart: unless-stopped
    expose:
      - "3306"
    volumes:
      - db_volume:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - internal
    command: --explicit_defaults_for_timestamp=1

  mlflow:
    container_name: tracker_mlflow
    image: tracker_ml
    restart: unless-stopped
    build:
      context: ./mlflow
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    # environment:
    #   - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/mlflow_service_account.json
    networks:
      - public
      - internal
    entrypoint: mlflow server --backend-store-uri mysql+pymysql://mlflow_user:mlflow_password@db:3306/mlflow --default-artifact-root gs://mlops-mlflow-artifacts/ --artifacts-destination gs://mlops-mlflow-artifacts/ -h 0.0.0.0
    depends_on:
      wait-for-db:
        condition: service_completed_successfully
  
  airflow:
    container_name: airflow
    # restart: always
    build:
      context: ./airflow
      dockerfile: Dockerfile
    volumes:
      - ./src/dags:/opt/airflow/dags
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      timeout: 45s
      interval: 10s
      retries: 10
    entrypoint: ./start-airflow.sh
    networks:
      - public
      - internal
    depends_on:
      wait-for-db:
        condition: service_completed_successfully
  
  dev:
    container_name: development_env
    image: development_env
    restart: unless-stopped
    build:
      context: ./src
      dockerfile: Dockerfile
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/mlflow_service_account.json
    ports:
      - "8888:8888"
    networks:
      - public
      - internal
    entrypoint: jupyter notebook --ip 0.0.0.0 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    volumes:
      - ./src/:/app
    depends_on:
      - mlflow

  wait-for-db:
    image: atkrad/wait4x
    depends_on:
      - db
    command: tcp db:3306 -t 90s -i 250ms
    networks:
      - internal

networks:
  internal:
  public:
    driver: bridge

volumes:
  db_volume: